<?xml version="1.0" encoding="UTF-8" ?>

<schema name="psiqcuic-schema-2.7" version="1.5">

  <fieldType name="miqlUuid" class="solr.UUIDField" indexed="true" stored="true" required="true"/>  
  <fieldType name="miqlInt"  class="solr.TrieIntField"  indexed="true" stored="false" 
             precisionStep="0" positionIncrementGap="0" multiValued="false" required="true"/>
  <fieldType name="miqlBoolean" class="solr.BoolField" indexed="true" stored="false" 
             multiValued="false" required="true"/>  
  <fieldType name="miqlIndexedUnstoredString" class="solr.StrField" sortMissingLast="true" 
             indexed="true" stored="false" omitNorms="true"  multiValued="true" required="true"/>
  
  <fieldType name="miqlUnindexedStoredString" class="solr.StrField" 
             sortMissingLast="true" indexed="false" stored="true" 
             omitNorms="true" multiValued="false" required="true"/>
  <fieldType name="miqlDummyField" class="solr.StrField" sortMissingLast="true" 
             indexed="false" stored="false" multiValued="true"/>
  
  <fieldType name="miqlIndexedStoredString" class="solr.StrField" sortMissingLast="true" 
             indexed="true" stored="true" omitNorms="true" multiValued="false" required="true"/>
  
  <fieldType name="miqlText" class="solr.TextField" positionIncrementGap="100"
             indexed="true" stored="false" omitNorms="true" termVectors="true"
             required="true" multiValued="true">
    <analyzer>
      <!-- replace brakets -->
      <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[\(\)]" replacement=""/> 
      <tokenizer  class="solr.WhitespaceTokenizerFactory"/>
      <!-- trim white spaces at the beginning and end of the words -->  
      <filter class="solr.TrimFilterFactory"/>
      <!-- remove words with length 1 -->
      <!-- <filter class="solr.LengthFilterFactory" min="2" max="1000"/>  -->
      <filter class="solr.LowerCaseFilterFactory"/>   
      <filter class="solr.StopFilterFactory"/> <!-- discards common english stop words: "a", "an", ... -->
    </analyzer>
  </fieldType>   
  <!--
      <fieldType name="miqlTextOld" class="solr.TextField" positionIncrementGap="100"
             indexed="true" stored="true" omitNorms="true" termVectors="true"
             required="true" multiValued="true">
    <analyzer>
      <!- - StandardTokenizer's behavior pre-Solr 3.1" - ->       
      <tokenizer class="solr.ClassicTokenizerFactory"/>
      <!- - Removes dots from acronyms and 's from the end of tokens - ->
      <filter class="solr.ClassicFilterFactory"/>
      <!- - "I.B.M.", "Solr" ==> "i.b.m.", "solr" - ->       
      <filter class="solr.LowerCaseFilterFactory"/>
      <!- -  Discards common words: "a", "an", "and", "are", "as", "at", "be", "but", "by" - ->
      <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"
              enablePositionIncrements="false"/> 
       <!- -  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/> - ->
       <!- -  <filter class="solr.SynonymFilterFactory" synonyms="syn.txt" ignoreCase="true" expand="false"/> - ->
    </analyzer>
    </fieldType>
    
  -->

  <!-- default solr fieldTypes -->

  <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
  <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true" />
  <fieldType name="strings" class="solr.StrField" sortMissingLast="true" multiValued="true" docValues="true" />

  <!-- boolean type: "true" or "false" -->
  <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
  <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>

  <!--
      Numeric field types that index values using KD-trees.
      Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
  -->
  <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
  <fieldType name="pfloat" class="solr.FloatPointField" docValues="true"/>
  <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
  <fieldType name="pdouble" class="solr.DoublePointField" docValues="true"/>
  
  <fieldType name="pints" class="solr.IntPointField" docValues="true" multiValued="true"/>
  <fieldType name="pfloats" class="solr.FloatPointField" docValues="true" multiValued="true"/>
  <fieldType name="plongs" class="solr.LongPointField" docValues="true" multiValued="true"/>
  <fieldType name="pdoubles" class="solr.DoublePointField" docValues="true" multiValued="true"/>
  <fieldType name="random" class="solr.RandomSortField" indexed="true"/>
  
  <!-- since fields of this type are by default not stored or indexed,
       any data added to them will be ignored outright.  -->
  <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />
  
  <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>
  <fieldType name="pdates" class="solr.DatePointField" docValues="true" multiValued="true"/>
  
  <fieldType name="binary" class="solr.BinaryField"/>

  <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100" multiValued="true">
    <analyzer type="index">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
      <!-- in this example, we will only use synonyms at query time
           <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
           <filter class="solr.FlattenGraphFilterFactory"/>
      -->
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
      <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>

   <!-- MIQL FIELDS -->
   
   <field name="uuId"  type="miqlUuid" />
   <field name="recId" type="miqlIndexedStoredString" default="-"/> 
   <field name="_version_" type="plong" indexed="true" stored="true"/>
   <!-- <field name="_text_" type="text_general" indexed="true" stored="false" multiValued="true"/> -->
   
   <!-- MIQL 2.5 indexed and stored fields specification http://code.google.com/p/psicquic/wiki/MiqlReference -->    
   <field name="idA"   type="miqlText" default="-"/> 
   <field name="idB"   type="miqlText" default="-"/>  
   <field name="id"    type="miqlText" default=""/> <!-- id = idA+altA+idB+altB -->        
   <field name="alias"    type="miqlText" default=""/> <!-- alias = aliasA+aliasB --> 
   <field name="identifier"  type="miqlText" default=""/> <!-- identifier = id + alias -->     
   <field name="pubauth"  type="miqlText" default="-"/>
   <field name="pubid"   type="miqlText" default="-"/>
   <field name="taxidA"   type="miqlText" default="-"/>
   <field name="taxidB"   type="miqlText" default="-"/> 
   <field name="species"   type="miqlText" default=""/> <!-- species = taxidA + taxidB -->   
   <field name="type"    type="miqlText" default="-"/> 
   <field name="detmethod"  type="miqlText" default="-"/>  
   <field name="interaction_id" type="miqlText" default="-"/> 
 
   <!-- MIQL 2.5 dummy fields used as input for 2.5 copy fields --> 
   <field name="altidA"   type="miqlDummyField" default="-"/>   
   <field name="altidB"   type="miqlDummyField" default="-"/>     
   <field name="aliasA"   type="miqlDummyField" default="-"/>   
   <field name="aliasB"   type="miqlDummyField" default="-"/>   
   <field name="source"   type="miqlDummyField" default="-"/>  
   <field name="confidence"  type="miqlDummyField" default="-"/>  
   
   <!-- MIQL 2.7 indexed and stored fields http://code.google.com/p/psicquic/wiki/MiqlReference27 -->
   <field name="complex"   type="miqlText"  default="-"/>
   <field name="pbioroleA"   type="miqlText"  default="-"/>
   <field name="pbioroleB"   type="miqlText"  default="-"/>
   <field name="pbiorole"   type="miqlText"  default=""/> <!-- pbiorole = pbioroleA + pbioroleB -->   
   <field name="ptypeA"   type="miqlText"  default="-"/>
   <field name="ptypeB"   type="miqlText"  default="-"/>
   <field name="ptype"    type="miqlText"  default=""/> <!-- ptype = ptypeA + ptypeB -->   
   <field name="pxrefA"   type="miqlText"  default="-"/>
   <field name="pxrefB"   type="miqlText"  default="-"/>
   <field name="pxref"    type="miqlText"  default=""/> <!-- pxref = pxrefA + pxrefB -->   
   <field name="xref"    type="miqlText"  default="-"/> 
   <field name="annot"    type="miqlText"  default=""/> <!-- annot = annotA + annotB --> 
   <field name="udate"    type="miqlInt"   default="0"/>
   <field name="negative"   type="miqlBoolean"  default="false"/> 
   <field name="ftypeA"   type="miqlText"  default="-"/>
   <field name="ftypeB"   type="miqlText"  default="-"/> 
   <field name="ftype"    type="miqlText"  default=""/> <!-- ftype = ftypeA + ftypeB -->
   <field name="pmethodA"  type="miqlText"  default="-"/>
   <field name="pmethodB"   type="miqlText"  default="-"/>
   <field name="pmethod"   type="miqlText"  default=""/> <!-- pmethod = pmethodA + pmethodB -->
   <field name="stc"    type="miqlBoolean"  default="false"/>
   <field name="param"    type="miqlBoolean"  default="false"/>

   <!-- MIQL 2.7 dummy fields used as input for 2.7 copy fields --> 
   <field name="pexproleA"  type="miqlDummyField" default="-"/>  
   <field name="pexproleB"  type="miqlDummyField" default="-"/>  
   <field name="annotA"   type="miqlDummyField" default="-"/>
   <field name="annotB"   type="miqlDummyField" default="-"/> 
   <field name="taxidHost"   type="miqlDummyField" default="-"/>    
   <field name="paramText"   type="miqlDummyField" default="-"/>
   <field name="cdate"    type="miqlDummyField" default="-"/>
   <field name="stcA"    type="miqlDummyField" default="-"/>
   <field name="stcB"    type="miqlDummyField" default="-"/>
   <field name="checksumA"   type="miqlDummyField" default="-"/>
   <field name="checksumB"   type="miqlDummyField" default="-"/>
   <field name="checksumI"   type="miqlDummyField" default=""/>
          
   <!-- Dynamic Stored Fields that can be used for faceting/sorting -->
   <dynamicField name="*_s"  type="miqlIndexedUnstoredString" required="false"/> 
   <dynamicField name="*_o"  type="miqlUnindexedStoredString" required="false"/>     
 
   <copyField source="idA"   dest="id"/>
   <copyField source="idB"   dest="id"/>
   <copyField source="aliasA"  dest="alias"/>
   <copyField source="aliasB"  dest="alias"/>
   <copyField source="idA"   dest="identifier"/>
   <copyField source="idB"   dest="identifier"/> 
   <copyField source="altidA"  dest="identifier"/>
   <copyField source="altidB"  dest="identifier"/> 
   <copyField source="aliasA"  dest="identifier"/>
   <copyField source="aliasB"  dest="identifier"/>
   <copyField source="taxidA"  dest="species"/>
   <copyField source="taxidB"  dest="species"/>
   <copyField source="pbioroleA"  dest="pbiorole"/> 
   <copyField source="pbioroleB"  dest="pbiorole"/>
   <copyField source="ptypeA"  dest="ptype"/> 
   <copyField source="ptypeB"  dest="ptype"/> 
   <copyField source="pxrefA"  dest="pxref"/> 
   <copyField source="pxrefB"  dest="pxref"/> 
   <copyField source="annotA"  dest="annot"/> 
   <copyField source="annotB"  dest="annot"/>  
   <copyField source="ftypeA"  dest="ftype"/> 
   <copyField source="ftypeB"  dest="ftype"/>
   <copyField source="pmethodA"  dest="pmethod"/>
   <copyField source="pmethodB"  dest="pmethod"/> 
   
   <copyField source="idA_s"   dest="id_s"/>
   <copyField source="idB_s"   dest="id_s"/>
   <copyField source="aliasA_s"  dest="alias_s"/>
   <copyField source="aliasB_s"  dest="alias_s"/>
   <copyField source="idA_s"   dest="identifier_s"/>
   <copyField source="idB_s"   dest="identifier_s"/> 
   <copyField source="altidA_s"  dest="identifier_s"/>
   <copyField source="altidB_s"  dest="identifier_s"/> 
   <copyField source="aliasA_s"  dest="identifier_s"/>
   <copyField source="aliasB_s"  dest="identifier_s"/>
   <copyField source="taxidA_s"  dest="species_s"/>
   <copyField source="taxidB_s"  dest="species_s"/>
   <copyField source="pbioroleA_s"  dest="pbiorole_s"/> 
   <copyField source="pbioroleB_s"  dest="pbiorole_s"/>
   <copyField source="ptypeA_s"  dest="ptype_s"/> 
   <copyField source="ptypeB_s"  dest="ptype_s"/> 
   <copyField source="pxrefA_s"  dest="pxref_s"/> 
   <copyField source="pxrefB_s"  dest="pxref_s"/> 
   <copyField source="annotA_s"  dest="annot_s"/> 
   <copyField source="annotB_s"  dest="annot_s"/>  
   <copyField source="ftypeA_s"  dest="ftype_s"/> 
   <copyField source="ftypeB_s"  dest="ftype_s"/>
   <copyField source="pmethodA_s"  dest="pmethod_s"/>
   <copyField source="pmethodB_s"  dest="pmethod_s"/>
   
      
   <!-- Field to use to determine and enforce document uniqueness. 
        Unless this field is marked with required="false", it will
        be a required field.
   -->
   <uniqueKey>uuId</uniqueKey>

<!--  
  <types>
    <fieldType name="miqlUuid" class="solr.UUIDField" indexed="true" stored="true" required="true"/>  
    <fieldType name="miqlInt"  class="solr.TrieIntField"  indexed="true" stored="false" 
               precisionStep="0" positionIncrementGap="0" multiValued="false" required="true"/>
    <fieldType name="miqlBoolean" class="solr.BoolField" indexed="true" stored="false" 
               multiValued="false" required="true"/>  
    <fieldType name="miqlIndexedUnstoredString" class="solr.StrField" sortMissingLast="true" 
               indexed="true" stored="false" omitNorms="true"  multiValued="true" required="true"/>

    <fieldType name="miqlUnindexedStoredString" class="solr.StrField" 
               sortMissingLast="true" indexed="false" stored="true" 
               omitNorms="true" multiValued="false" required="true"/>
    <fieldType name="miqlDummyField" class="solr.StrField" sortMissingLast="true" 
               indexed="false" stored="false" multiValued="true"/>

    < ! - - new psiquic reference implementation - - >

<fieldType name="miqlText" class="solr.TextField" positionIncrementGap="100" indexed="true" stored="false" omitNorms="true" termVectors="true" required="true" multiValued="true">
      <analyzer>  
  <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[\(\)]" replacement=""/> < ! - - replace brakets - - >
  <tokenizer  class="solr.WhitespaceTokenizerFactory"/>
  <filter class="solr.TrimFilterFactory"/> < ! - -  trim white spaces at the beginning and end of the words - - >  
  < ! - -   <filter class="solr.LengthFilterFactory" min="2" max="1000"/>  - - >< ! - - remove words with length 1 - - >
        <filter class="solr.LowerCaseFilterFactory"/>   
        <filter class="solr.StopFilterFactory"/> < ! - -  discards common english stop words: "a", "an", ... - - >
      </analyzer>
    </fieldType>   
  </types>  
  
    < ! - - to garantee backwards-compatability with psiquic reference implementation  1.2.1 which uses the default lucene 2.3.2 analyzer- - >  
   <fieldType name="miqlTextOld" class="solr.TextField" positionIncrementGap="100" indexed="true" stored="true" omitNorms="true" termVectors="true" required="true" multiValued="true">
     <analyzer>
       <tokenizer class="solr.ClassicTokenizerFactory"/>  < ! - - StandardTokenizer's behavior pre-Solr 3.1" - - >       
       <filter class="solr.ClassicFilterFactory"/>   < ! - - Removes dots from acronyms and 's from the end of tokens - - >
       <filter class="solr.LowerCaseFilterFactory"/>   < ! - - "I.B.M.", "Solr" ==> "i.b.m.", "solr" - - >       
       <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true" enablePositionIncrements="false"/> < ! - -  Discards common words: "a", "an", "and", "are", "as", "at", "be", "but", "by" - - >
       < ! - -  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/> - - >
       < ! - -  <filter class="solr.SynonymFilterFactory" synonyms="syn.txt" ignoreCase="true" expand="false"/> - - >
     </analyzer>
   </fieldType>      
  


    <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" />
    <field name="uuId"  type="miqlUuid" default="NEW"/>



    <uniqueKey>uuId</uniqueKey>


  <fields>
  <field name="uuId"  type="miqlUuid" default="NEW"/>
  <field name="recId" type="miqlIndexedStoredString" default="-"/> 
  
  < ! - - MIQL 2.5 indexed and stored fields specification http://code.google.com/p/psicquic/wiki/MiqlReference- - >    
   <field name="idA"   type="miqlText" default="-"/> 
   <field name="idB"   type="miqlText" default="-"/>  
   <field name="id"    type="miqlText" default=""/> < ! - - id = idA+altA+idB+altB - - >        
   <field name="alias"    type="miqlText" default=""/> < ! - - alias = aliasA+aliasB - - > 
   <field name="identifier"  type="miqlText" default=""/> < ! - - identifier = id + alias - - >     
   <field name="pubauth"  type="miqlText" default="-"/>
   <field name="pubid"   type="miqlText" default="-"/>
   <field name="taxidA"   type="miqlText" default="-"/>
   <field name="taxidB"   type="miqlText" default="-"/> 
   <field name="species"   type="miqlText" default=""/> < ! - - species = taxidA + taxidB - - >   
   <field name="type"    type="miqlText" default="-"/> 
   <field name="detmethod"  type="miqlText" default="-"/>  
   <field name="interaction_id" type="miqlText" default="-"/> 
 
   < ! - - MIQL 2.5 dummy fields used as input for 2.5 copy fields - - > 
   <field name="altidA"   type="miqlDummyField" default="-"/>   
   <field name="altidB"   type="miqlDummyField" default="-"/>     
   <field name="aliasA"   type="miqlDummyField" default="-"/>   
   <field name="aliasB"   type="miqlDummyField" default="-"/>   
   <field name="source"   type="miqlDummyField" default="-"/>  
   <field name="confidence"  type="miqlDummyField" default="-"/>  
   
   < ! - - MIQL 2.7 indexed and stored fields http://code.google.com/p/psicquic/wiki/MiqlReference27 - - >
   <field name="complex"   type="miqlText"  default="-"/>
   <field name="pbioroleA"   type="miqlText"  default="-"/>
   <field name="pbioroleB"   type="miqlText"  default="-"/>
   <field name="pbiorole"   type="miqlText"  default=""/> < ! - - pbiorole = pbioroleA + pbioroleB - - >   
   <field name="ptypeA"   type="miqlText"  default="-"/>
   <field name="ptypeB"   type="miqlText"  default="-"/>
   <field name="ptype"    type="miqlText"  default=""/> < ! - - ptype = ptypeA + ptypeB - - >   
   <field name="pxrefA"   type="miqlText"  default="-"/>
   <field name="pxrefB"   type="miqlText"  default="-"/>
   <field name="pxref"    type="miqlText"  default=""/> < ! - - pxref = pxrefA + pxrefB - - >   
   <field name="xref"    type="miqlText"  default="-"/> 
   <field name="annot"    type="miqlText"  default=""/> < ! - - annot = annotA + annotB - - > 
   <field name="udate"    type="miqlInt"   default="0"/>
   <field name="negative"   type="miqlBoolean"  default="false"/> 
   <field name="ftypeA"   type="miqlText"  default="-"/>
   <field name="ftypeB"   type="miqlText"  default="-"/> 
   <field name="ftype"    type="miqlText"  default=""/> < ! - - ftype = ftypeA + ftypeB - - >
   <field name="pmethodA"  type="miqlText"  default="-"/>
   <field name="pmethodB"   type="miqlText"  default="-"/>
   <field name="pmethod"   type="miqlText"  default=""/> < ! - - pmethod = pmethodA + pmethodB - - >
   <field name="stc"    type="miqlBoolean"  default="false"/>
   <field name="param"    type="miqlBoolean"  default="false"/>

   < ! - - MIQL 2.7 dummy fields used as input for 2.7 copy fields - - > 
   <field name="pexproleA"  type="miqlDummyField" default="-"/>  
   <field name="pexproleB"  type="miqlDummyField" default="-"/>  
   <field name="annotA"   type="miqlDummyField" default="-"/>
   <field name="annotB"   type="miqlDummyField" default="-"/> 
   <field name="taxidHost"   type="miqlDummyField" default="-"/>    
   <field name="paramText"   type="miqlDummyField" default="-"/>
   <field name="cdate"    type="miqlDummyField" default="-"/>
   <field name="stcA"    type="miqlDummyField" default="-"/>
   <field name="stcB"    type="miqlDummyField" default="-"/>
   <field name="checksumA"   type="miqlDummyField" default="-"/>
   <field name="checksumB"   type="miqlDummyField" default="-"/>
   <field name="checksumI"   type="miqlDummyField" default=""/>
          
   < ! - - Dynamic Stored Fields that can be used for faceting/sorting - - >
   <dynamicField name="*_s"  type="miqlIndexedUnstoredString" default="-"/> 
   <dynamicField name="*_o"  type="miqlUnindexedStoredString" default="-"/>     
 </fields>
 
 <copyField source="idA"   dest="id"/>
 <copyField source="idB"   dest="id"/>
 <copyField source="aliasA"  dest="alias"/>
 <copyField source="aliasB"  dest="alias"/>
 <copyField source="idA"   dest="identifier"/>
 <copyField source="idB"   dest="identifier"/> 
 <copyField source="altidA"  dest="identifier"/>
 <copyField source="altidB"  dest="identifier"/> 
 <copyField source="aliasA"  dest="identifier"/>
 <copyField source="aliasB"  dest="identifier"/>
 <copyField source="taxidA"  dest="species"/>
 <copyField source="taxidB"  dest="species"/>
 <copyField source="pbioroleA"  dest="pbiorole"/> 
 <copyField source="pbioroleB"  dest="pbiorole"/>
 <copyField source="ptypeA"  dest="ptype"/> 
 <copyField source="ptypeB"  dest="ptype"/> 
 <copyField source="pxrefA"  dest="pxref"/> 
 <copyField source="pxrefB"  dest="pxref"/> 
 <copyField source="annotA"  dest="annot"/> 
 <copyField source="annotB"  dest="annot"/>  
 <copyField source="ftypeA"  dest="ftype"/> 
 <copyField source="ftypeB"  dest="ftype"/>
 <copyField source="pmethodA"  dest="pmethod"/>
 <copyField source="pmethodB"  dest="pmethod"/> 

 <copyField source="idA_s"   dest="id_s"/>
 <copyField source="idB_s"   dest="id_s"/>
 <copyField source="aliasA_s"  dest="alias_s"/>
 <copyField source="aliasB_s"  dest="alias_s"/>
 <copyField source="idA_s"   dest="identifier_s"/>
 <copyField source="idB_s"   dest="identifier_s"/> 
 <copyField source="altidA_s"  dest="identifier_s"/>
 <copyField source="altidB_s"  dest="identifier_s"/> 
 <copyField source="aliasA_s"  dest="identifier_s"/>
 <copyField source="aliasB_s"  dest="identifier_s"/>
 <copyField source="taxidA_s"  dest="species_s"/>
 <copyField source="taxidB_s"  dest="species_s"/>
 <copyField source="pbioroleA_s"  dest="pbiorole_s"/> 
 <copyField source="pbioroleB_s"  dest="pbiorole_s"/>
 <copyField source="ptypeA_s"  dest="ptype_s"/> 
 <copyField source="ptypeB_s"  dest="ptype_s"/> 
 <copyField source="pxrefA_s"  dest="pxref_s"/> 
 <copyField source="pxrefB_s"  dest="pxref_s"/> 
 <copyField source="annotA_s"  dest="annot_s"/> 
 <copyField source="annotB_s"  dest="annot_s"/>  
 <copyField source="ftypeA_s"  dest="ftype_s"/> 
 <copyField source="ftypeB_s"  dest="ftype_s"/>
 <copyField source="pmethodA_s"  dest="pmethod_s"/>
 <copyField source="pmethodB_s"  dest="pmethod_s"/>
 
      
 < ! - - Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   - - >
   <uniqueKey>uuId</uniqueKey>

-->

</schema>
